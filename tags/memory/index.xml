<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>memory on Bob&#39;s Site</title>
    <link>https://bobxwang.github.io/tags/memory/</link>
    <description>Recent content in memory on Bob&#39;s Site</description>
    <image>
      <title>Bob&#39;s Site</title>
      <url>https://bobxwang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://bobxwang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-ch</language>
    <lastBuildDate>Sun, 25 Mar 2018 20:17:59 +0000</lastBuildDate>
    <atom:link href="https://bobxwang.github.io/tags/memory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GoLang内存模型</title>
      <link>https://bobxwang.github.io/2018/03/25/memory-in-go/</link>
      <pubDate>Sun, 25 Mar 2018 20:17:59 +0000</pubDate>
      <guid>https://bobxwang.github.io/2018/03/25/memory-in-go/</guid>
      <description>Go 内存模型阐明了一个Go程序对某变量的写入, 如何才能确保另一个读取该变量的Go程序监测到 忠告 程序在修改被多个Go程序同时访问的数据时必须序列</description>
    </item>
  </channel>
</rss>
